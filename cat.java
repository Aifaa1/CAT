FARDHOSA HUSSEIN ABDI
SCT221-0499/2023
JAVA PROGRAM CAT

1.	Fibonacci Sum of Even-Valued Terms
-	Each new term in the Fibonacci sequence is generated by adding the previous two terms.
public class FibonacciEvenSum {
    public static void main(String[] args) {
        System.out.println("Sum of even Fibonacci numbers: " + sumEvenFibonacci(4000000));
    }

    public static int sumEvenFibonacci(int limit) {
        int sum = 0;
        int a = 1;
        int b = 2;

        while (b <= limit) {
            if (b % 2 == 0) {
                sum += b;
            }
            int next = a + b;
            a = b;
            b = next;
        }
        return sum;
    }
}

2.	A palindrome number is a number that remain the same when read from behind or front ( a number that is equal to reverse of number) for example,  353 is palindrome because reverse of 353 is 353 (you see the number remains the same). But a number like 591 is not palindrome because reverse of 591 is 195 which is not equal to 591. Write Java program to check if a number entered by the user is palindrome or not. You should provide the user with a GUI interface to enter the number and display the results on the same interface.
-	Palindrome Checker with GUI
import javax.swing.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

public class PalindromeChecker {
    public static void main(String[] args) {
        JFrame frame = new JFrame("Palindrome Checker");
        frame.setSize(300, 200);
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        frame.setLayout(null);
        JLabel label = new JLabel("Enter a number:");
        label.setBounds(10, 20, 150, 25);
        frame.add(label);
        JTextField textField = new JTextField();
        textField.setBounds(150, 20, 100, 25);
        frame.add(textField);
        JButton button = new JButton("Check");
        button.setBounds(10, 60, 100, 25);
        frame.add(button);
        JLabel resultLabel = new JLabel("");
        resultLabel.setBounds(10, 100, 250, 25);
        frame.add(resultLabel);
        button.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                String input = textField.getText();
                if (isPalindrome(input)) {
                    resultLabel.setText(input + " is a palindrome.");
                } else {
                    resultLabel.setText(input + " is not a palindrome.");
                }
            }
        });

        frame.setVisible(true);
    }
    private static boolean isPalindrome(String number) {
        String reversed = new StringBuilder(number).reverse().toString();
        return number.equals(reversed);
    }
}

3.	Write a Java program that takes 15 values of type integer as inputs from user, store the values in an array.
a)	Print the values stored in the array on screen.
b)	 Ask user to enter a number, check if that number (entered by user) is present in array or not. If it is present print, “the number found at index (index of the number) ” and the text “number not found in this array”
c)	Sort the arrays in ascending order.
d)	Create another array, copy all the elements from the existing array to the new array but in reverse order. Now print the elements of the new array on the screen
e)	Get the sum and product of all elements of your array. Print product and the sum each on its own line.


import java.util.Arrays;
import java.util.Scanner;
public class ArrayOperations {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int[] numbers = new int[15];
        // a) Input values
        System.out.println("Enter 15 integer values:");
        for (int i = 0; i < 15; i++) {
            numbers[i] = scanner.nextInt();
        }
        // a) Print values
        System.out.println("Values stored in the array: " + Arrays.toString(numbers));
        // b) Check for a number
        System.out.print("Enter a number to check: ");
        int searchNumber = scanner.nextInt();
        int index = -1;
        for (int i = 0; i < numbers.length; i++) {
            if (numbers[i] == searchNumber) {
                index = i;
                break;
            }
        }
        if (index != -1) {
            System.out.println("The number is found at index: " + index);
        } else {
            System.out.println("Number not found in this array.");
        }
        // c) Sort the array
        Arrays.sort(numbers);
        System.out.println("Sorted array: " + Arrays.toString(numbers));
        // d) Reverse the array
        int[] reversedArray = new int[numbers.length];
        for (int i = 0; i < numbers.length; i++) {
            reversedArray[i] = numbers[numbers.length - 1 - i];
        }
        System.out.println("Reversed array: " + Arrays.toString(reversedArray));
        // e) Sum and product of elements
        int sum = 0;
        long product = 1;
        for (int num : numbers) {
            sum += num;
            product *= num;
        }
        System.out.println("Sum of all elements: " + sum);
        System.out.println("Product of all elements: " + product);
        scanner.close();
    }
}
